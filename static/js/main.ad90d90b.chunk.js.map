{"version":3,"sources":["redux/helper.js","redux/boardReducer.js","redux/foundTilesReducer.js","redux/roundReducer.js","redux/selectedColorReducer.js","redux/rootReducer.js","components/Board/Board.jsx","components/StartGame/StartGame.jsx","App.js","index.js"],"names":["helperCreateBoard","tilesNumber","board","i","obj","id","Math","random","color","toString","substr","push","j","length","floor","CREATE_BOARD","CLEAR_BOARD","createBoard","type","payload","ADD_FOUND_TILES","CLEAR_FOUND_TILES","ADD_ROUND","CLEAR_ROUND","ADD_SHOWN_COLOR","CLEAR_SHOWN_COLORS","clearShownColors","getRound","state","round","getBoard","getSelectedTiles","selectedTiles","getFoundTiles","foundTiles","rootReducer","combineReducers","action","flat","Board","useSelector","dispatch","useDispatch","handleClick","useCallback","tileId","includes","addShownColor","useEffect","setTimeout","newGame","className","classnames","board__list_not_active","style","maxWidth","sqrt","map","tile","board__item_selected","board__item_found","onClick","backgroundColor","onKeyDown","key","role","StartGame","App","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad90d90b.chunk.js","sourcesContent":["export const helperCreateBoard = (tilesNumber) => {\n  const board = [];\n  for (let i = 0; i < tilesNumber / 2; ++i) {\n    const obj = {\n      id: Math.random(),\n      color: `#${(0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6)}`,\n    };\n    board.push(obj, { ...obj, id: obj.id + 1 });\n  }\n\n  for (let j = board.length - 1; j > 0; --j) {\n    const i = Math.floor(Math.random() * (j + 1));\n    [board[i], board[j]] = [board[j], board[i]];\n  }\n\n  return board;\n};\n","import { helperCreateBoard } from './helper';\n\nconst CREATE_BOARD = 'board/CREATE_BOARD';\nconst CLEAR_BOARD = 'board/CLEAR_BOARD';\n\nexport const createBoard = (tilesNumber) => ({\n  type: CREATE_BOARD,\n  payload: helperCreateBoard(tilesNumber),\n});\n\nexport const clearBoard = () => ({\n  type: CLEAR_BOARD,\n  payload: [],\n});\n\nexport const boardReduser = (state = [], action) => {\n  switch (action.type) {\n    case CREATE_BOARD:\n    case CLEAR_BOARD:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","const ADD_FOUND_TILES = 'found/ADD_FOUND_TILES';\nconst CLEAR_FOUND_TILES = 'found/CLEAR_FOUND_TILES';\n\nexport const addFoundTiles = (shownArr) => ({\n  type: ADD_FOUND_TILES,\n  payload: shownArr,\n});\n\nexport const clearFoundTiles = () => ({\n  type: CLEAR_FOUND_TILES,\n  payload: [],\n});\n\nexport const foundTilesReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_FOUND_TILES:\n      return [...state, action.payload].flat();\n    case CLEAR_FOUND_TILES:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","const ADD_ROUND = 'round/ADD_ROUND';\nconst CLEAR_ROUND = 'round/CLEAR_ROUND';\n\nexport const addRound = () => ({\n  type: ADD_ROUND,\n});\n\nexport const clearRound = () => ({\n  type: CLEAR_ROUND,\n  payload: 1,\n});\n\nexport const roundReducer = (round = 1, action) => {\n  switch (action.type) {\n    case ADD_ROUND:\n      return round + 1;\n    case CLEAR_ROUND:\n      return action.payload;\n    default:\n      return round;\n  }\n};\n","const ADD_SHOWN_COLOR = 'color/ADD_SHOWN_COLOR';\nconst CLEAR_SHOWN_COLORS = 'color/CLEAR_SHOWN_COLORS';\n\nexport const addShownColor = (tileId) => ({\n  type: ADD_SHOWN_COLOR,\n  payload: tileId,\n});\n\nexport const clearShownColors = () => ({\n  type: CLEAR_SHOWN_COLORS,\n});\n\nexport const selectedColorReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_SHOWN_COLOR:\n      return [...state, action.payload];\n    case CLEAR_SHOWN_COLORS:\n      return [];\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { boardReduser } from './boardReducer';\nimport { foundTilesReducer } from './foundTilesReducer';\nimport { roundReducer } from './roundReducer';\nimport { selectedColorReducer } from './selectedColorReducer';\n\nexport const getRound = (state) => state.round;\nexport const getBoard = (state) => state.board;\nexport const getSelectedTiles = (state) => state.selectedTiles;\nexport const getFoundTiles = (state) => state.foundTiles;\n\nexport const rootReducer = combineReducers({\n  round: roundReducer,\n  board: boardReduser,\n  selectedTiles: selectedColorReducer,\n  foundTiles: foundTilesReducer,\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\nimport React, { useCallback, useEffect } from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getBoard, getFoundTiles, getRound, getSelectedTiles,\n} from '../../redux/rootReducer';\nimport { addShownColor, clearShownColors } from '../../redux/selectedColorReducer';\nimport { addFoundTiles, clearFoundTiles } from '../../redux/foundTilesReducer';\nimport { addRound, clearRound } from '../../redux/roundReducer';\nimport { clearBoard } from '../../redux/boardReducer';\n\nexport const Board = () => {\n  const round = useSelector(getRound);\n  const board = useSelector(getBoard);\n  const selectedTiles = useSelector(getSelectedTiles);\n  const foundTiles = useSelector(getFoundTiles);\n  const dispatch = useDispatch();\n\n  const handleClick = useCallback((tileId) => {\n    if (selectedTiles.includes(tileId)) {\n      return;\n    }\n    dispatch(addShownColor(tileId));\n  }, [dispatch, selectedTiles]);\n\n  useEffect(() => {\n    if (selectedTiles.length === 2) {\n      setTimeout(() => {\n        if (\n          selectedTiles[0] - selectedTiles[1] === 1 || selectedTiles[0] - selectedTiles[1] === -1\n        ) {\n          dispatch(addFoundTiles(selectedTiles));\n        } else {\n          dispatch(addRound());\n        }\n        dispatch(clearShownColors());\n      }, 1500);\n    }\n  }, [dispatch, selectedTiles]);\n\n  const newGame = useCallback(() => {\n    dispatch(clearBoard());\n    dispatch(clearFoundTiles());\n    dispatch(clearShownColors());\n    dispatch(clearRound());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {board.length > foundTiles.length && (\n        <p>{`ROUND: ${round}`}</p>\n      )}\n      <div className=\"board\">\n        {board.length > foundTiles.length && (\n          <ul\n            className={classnames('board__list', {\n              board__list_not_active: selectedTiles.length === 2,\n            })}\n            style={{\n              maxWidth: `${Math.sqrt(board.length) * 80}px`,\n            }}\n          >\n            {board.map((tile) => (\n              <li\n                key={tile.id}\n                className={classnames('board__item', {\n                  board__item_selected: selectedTiles.includes(tile.id),\n                  board__item_found: foundTiles.includes(tile.id),\n                })}\n                onClick={() => handleClick(tile.id, tile.color)}\n                style={{\n                  backgroundColor: selectedTiles.includes(tile.id)\n                  && `${tile.color}`,\n                }}\n                onKeyDown={({ key }) => {\n                  if (key === 'Enter') {\n                    handleClick(tile.id, tile.color);\n                  }\n                }}\n                role=\"button\"\n              />\n            ))}\n          </ul>\n        )}\n\n        {board.length === foundTiles.length && (\n          <h2>{`You played ${round} rounds to win`}</h2>\n        )}\n\n        <button\n          className=\"board__button\"\n          type=\"button\"\n          onClick={newGame}\n        >\n          New game\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './StartGame.css';\nimport { useDispatch } from 'react-redux';\nimport { createBoard } from '../../redux/boardReducer';\n\nexport const StartGame = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <button\n        className=\"start__button\"\n        type=\"button\"\n        onClick={() => dispatch(createBoard(16))}\n      >\n        Easy level\n      </button>\n      <button\n        className=\"start__button\"\n        type=\"button\"\n        onClick={() => dispatch(createBoard(36))}\n      >\n        Normal level\n      </button>\n      <button\n        className=\"start__button\"\n        type=\"button\"\n        onClick={() => dispatch(createBoard(64))}\n      >\n        Difficult level\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport { Board } from './components/Board/Board';\nimport { StartGame } from './components/StartGame/StartGame';\nimport { getBoard } from './redux/rootReducer';\n\nfunction App() {\n  const board = useSelector(getBoard);\n  return (\n    <div className=\"App\">\n      {board.length === 0 && (\n        <StartGame />\n      )}\n      {board.length > 0 && (\n        <Board />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}